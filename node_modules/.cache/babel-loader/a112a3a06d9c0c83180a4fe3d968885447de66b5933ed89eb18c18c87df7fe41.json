{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-management-dashboard\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    department: '',\n    address: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const {\n    id\n  } = useParams(); // Access the user ID for editing\n  const navigate = useNavigate(); // Used for navigation\n\n  // Fetch user details if editing\n  useEffect(() => {\n    if (id) {\n      setIsEditing(true);\n      fetchUserDetails(id);\n    }\n  }, [id]);\n\n  // Fetch user details for editing\n  const fetchUserDetails = async userId => {\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);\n      const data = await response.json();\n      setFormData({\n        firstName: data.name.split(' ')[0],\n        lastName: data.name.split(' ')[1],\n        email: data.email,\n        phone: data.phone,\n        department: '',\n        // Add logic to set the department if available\n        address: data.address.street\n      });\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Submit form to add or edit user\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isEditing) {\n      // Edit user\n      await updateUser(formData);\n    } else {\n      // Add new user\n      await addUser(formData);\n    }\n    navigate('/'); // Redirect to dashboard after adding/editing\n  };\n\n  // Add a new user\n  const addUser = async user => {\n    try {\n      // Call your API to add the user\n      console.log('Adding new user:', user);\n    } catch (error) {\n      console.error('Error adding user:', error);\n    }\n  };\n\n  // Update an existing user\n  const updateUser = async user => {\n    try {\n      // Call your API to update the user\n      console.log('Updating user:', user);\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ? 'Edit User' : 'Add New User'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: formData.firstName,\n        onChange: handleInputChange,\n        placeholder: \"First Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: formData.lastName,\n        onChange: handleInputChange,\n        placeholder: \"Last Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: formData.phone,\n        onChange: handleInputChange,\n        placeholder: \"Phone Number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"department\",\n        value: formData.department,\n        onChange: handleInputChange,\n        placeholder: \"Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: formData.address,\n        onChange: handleInputChange,\n        placeholder: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [isEditing ? 'Update' : 'Add', \" User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(UserForm, \"So4RWRKlzwPMKZT7mjCyNNwf1dM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","UserForm","_s","formData","setFormData","firstName","lastName","email","phone","department","address","isEditing","setIsEditing","id","navigate","fetchUserDetails","userId","response","fetch","data","json","name","split","street","error","console","handleInputChange","e","value","target","handleSubmit","preventDefault","updateUser","addUser","user","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["D:/user-management-dashboard/src/components/UserForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nfunction UserForm() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    department: '',\r\n    address: '',\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const { id } = useParams(); // Access the user ID for editing\r\n  const navigate = useNavigate(); // Used for navigation\r\n\r\n  // Fetch user details if editing\r\n  useEffect(() => {\r\n    if (id) {\r\n      setIsEditing(true);\r\n      fetchUserDetails(id);\r\n    }\r\n  }, [id]);\r\n\r\n  // Fetch user details for editing\r\n  const fetchUserDetails = async (userId) => {\r\n    try {\r\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n      const data = await response.json();\r\n      setFormData({\r\n        firstName: data.name.split(' ')[0],\r\n        lastName: data.name.split(' ')[1],\r\n        email: data.email,\r\n        phone: data.phone,\r\n        department: '', // Add logic to set the department if available\r\n        address: data.address.street,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching user:', error);\r\n    }\r\n  };\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // Submit form to add or edit user\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isEditing) {\r\n      // Edit user\r\n      await updateUser(formData);\r\n    } else {\r\n      // Add new user\r\n      await addUser(formData);\r\n    }\r\n    navigate('/'); // Redirect to dashboard after adding/editing\r\n  };\r\n\r\n  // Add a new user\r\n  const addUser = async (user) => {\r\n    try {\r\n      // Call your API to add the user\r\n      console.log('Adding new user:', user);\r\n    } catch (error) {\r\n      console.error('Error adding user:', error);\r\n    }\r\n  };\r\n\r\n  // Update an existing user\r\n  const updateUser = async (user) => {\r\n    try {\r\n      // Call your API to update the user\r\n      console.log('Updating user:', user);\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>{isEditing ? 'Edit User' : 'Add New User'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={formData.firstName}\r\n          onChange={handleInputChange}\r\n          placeholder=\"First Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={formData.lastName}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Last Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          value={formData.phone}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Phone Number\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"department\"\r\n          value={formData.department}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Department\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          value={formData.address}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Address\"\r\n        />\r\n        <button type=\"submit\">{isEditing ? 'Update' : 'Add'} User</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}