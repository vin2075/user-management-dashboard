{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-management-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport UserDashboard from './components/UserDashboard';\nimport UserForm from './components/UserForm';\nimport './App.css'; // or './Dashboard.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n\n  // Fetch users from API or use mock data\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      // Assuming you're using an API like jsonplaceholder\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Function to handle adding or updating users\n  const addOrUpdateUser = user => {\n    if (user.id) {\n      // If user has an ID, update the user\n      setUsers(prevUsers => prevUsers.map(u => u.id === user.id ? user : u));\n    } else {\n      // If user does not have an ID (new user), add it to the list\n      setUsers(prevUsers => [...prevUsers, user]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(UserDashboard, {\n            users: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(UserForm, {\n            onSave: addOrUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(UserForm, {\n            onSave: addOrUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","UserDashboard","UserForm","jsxDEV","_jsxDEV","App","_s","users","setUsers","fetchUsers","response","fetch","data","json","error","console","addOrUpdateUser","user","id","prevUsers","map","u","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSave","_c","$RefreshReg$"],"sources":["D:/user-management-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport UserDashboard from './components/UserDashboard';\nimport UserForm from './components/UserForm';\nimport './App.css'; // or './Dashboard.css'\n\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  // Fetch users from API or use mock data\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      // Assuming you're using an API like jsonplaceholder\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Function to handle adding or updating users\n  const addOrUpdateUser = (user) => {\n    if (user.id) {\n      // If user has an ID, update the user\n      setUsers((prevUsers) =>\n        prevUsers.map((u) => (u.id === user.id ? user : u))\n      );\n    } else {\n      // If user does not have an ID (new user), add it to the list\n      setUsers((prevUsers) => [...prevUsers, user]);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <nav>\n          <Link to=\"/\">Dashboard</Link>\n          <Link to=\"/add\">Add User</Link>\n        </nav>\n\n        <Routes>\n          <Route path=\"/\" element={<UserDashboard users={users} />} />\n          <Route path=\"/add\" element={<UserForm onSave={addOrUpdateUser} />} />\n          <Route path=\"/edit/:id\" element={<UserForm onSave={addOrUpdateUser} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}